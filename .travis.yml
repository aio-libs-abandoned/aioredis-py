sudo: false

addons:
  apt:
    packages:
    - socat

language: python

python:
- "3.3"
- "3.4"
- "3.5"

env:
  global:
  - REDIS_PORT_1=6379
  - REDIS_PORT_2=6380
  - REDIS_SOCKET=/tmp/aioredis.sock
  - ALL_REDIS_TAGS="2.6.17 2.8.22 3.0.5"
  matrix:
  - REDIS_TAG=2.6.17
  - REDIS_TAG=2.8.22
  - REDIS_TAG=3.0.5

cache:
  directories:
  - $HOME/redis
  - $HOME/.cache/pip
before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log

before_install:
- export REDIS_BIN=$HOME/redis/${REDIS_TAG}/bin
- >
  if [ ! -x "$REDIS_BIN/redis-server" ]; then
    # For proper caching we must build all redis versions
    for TAG in ${ALL_REDIS_TAGS}; do
      wget -c https://github.com/antirez/redis/archive/${TAG}.tar.gz -O redis-${TAG}.tar.gz
      tar -xvf redis-${TAG}.tar.gz
      make -C redis-${TAG} PREFIX=$HOME/redis/${TAG} install
    done;
  fi
# make certificate for ssl/tls test
- openssl genrsa -out /tmp/server.key 1024
- openssl req -new -key /tmp/server.key -x509 -out /tmp/server.crt -batch
- cat /tmp/server.key /tmp/server.crt > /tmp/server.pem
- export CERT_FILE=/tmp/server.crt

install:
- pip install hiredis
- pip install flake8
- pip install pytest
- pip install pytest-coverage
- pip install coveralls
- pip install -e .

before_script:
# running socat
- socat openssl-listen:6443,cert=/tmp/server.pem,verify=0,fork tcp-connect:localhost:6379 &
# - echo "PING" | socat stdin openssl-connect:localhost:6443,verify=0

script:
- flake8 aioredis tests
- py.test -vs --cov=aioredis

# checking examples
- >
  if python -c "import sys; sys.exit(sys.version_info < (3, 5))"; then
    export EXAMPLES=$(find $PWD/examples/ -name "*.py");
  else
    export EXAMPLES=$(find $PWD/examples/ -name "*.py" -not -name "*_3.5_*.py");
  fi;
  for example in $EXAMPLES; do
    echo "Running ${example}";
    python3 ${example} || exit 1;
  done;

after_script:
- coveralls

# deploy:
#   provider: pypi
#   user: popravich
#   password:
#   distributions: "sdist bdist_wheel"
#   on:
#     tags: true
#     python: "3.5"
