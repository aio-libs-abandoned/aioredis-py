name: CI

on:
  push:
    branches:
      - master
      - '[0-9].[0-9]+'  # matches to backport branches, e.g. 3.6
    tags: [ 'v*' ]
  pull_request:
    branches:
      - master
      - '[0-9].[0-9]+'
  schedule:
    - cron:  '0 6 * * *'  # Daily 6AM UTC build


jobs:

  lint:
    name: Linter
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Cache PyPI
      uses: actions/cache@v2
      with:
        key: pip-lint-${{ hashFiles('**/requirements.txt') }}
        path: ~/.cache/pip
        restore-keys: |
            pip-lint-
    - name: Install dependencies
      uses: py-actions/py-dependency-install@v2
      with:
        path: tests/requirements.txt
    - name: Run linter
      run: |
        make lint
    - name: Prepare twine checker
      run: |
        pip install -U twine wheel
        python setup.py sdist bdist_wheel
    - name: Run twine checker
      run: |
        twine check dist/*

  test:
    name: Test
    needs: lint
    strategy:
      matrix:
        pyver: [3.6, 3.7, 3.8, 3.9, pypy3]
        uvloop: ['no-uvloop']
        include:
        - pyver: 3.6
          uvloop: 'uvloop'
        - pyver: 3.8
          uvloop: 'uvloop'
      fail-fast: false
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      INSTALL_DIR: ${{ github.workspace }}/redis
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Python ${{ matrix.pyver }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.pyver }}
    - name: Cache Redis Server
      uses: actions/cache@v2
      with:
        key: pip-ci-${{ runner.os }}-${{ hashFiles('**/requirements.txt', 'Makefile') }}
        path: ${{ github.workspace }}/redis
        restore-keys: |
            pip-ci-${{ runner.os }}-
    - name: Install Redis Server
      run: |
        sudo apt install socat
        make ci-prune-old-redis
        make -j ci-build-redis
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"    # - name: Cache
    - name: Cache PyPI
      uses: actions/cache@v2
      with:
        key: pip-ci-${{ runner.os }}-${{ matrix.pyver }}-${{ hashFiles('**/requirements.txt') }}
        path: ${{ steps.pip-cache.outputs.dir }}
        restore-keys: |
            pip-ci-${{ runner.os }}-${{ matrix.pyver }}-
    - name: Install dependencies
      uses: py-actions/py-dependency-install@v2
      with:
        path: tests/requirements.txt
    - name: Install uvloop
      if: ${{ matrix.uvloop == 'uvloop' }}
      run: pip install uvloop
    - name: Install Self
      run: |
        pip install -e . -c tests/requirements.txt
    - name: Run unittests (no-uvloop)
      if: matrix.uvloop == 'no-uvloop'
      run: |
        make ci-test
        python -m coverage xml
    - name: Run unittests (uvloop)
      if: matrix.uvloop == 'uvloop'
      run: |
        make ci-test
        python -m coverage xml
      env:
        PYTEST_ADDOPTS: "--uvloop"
    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unit
        fail_ci_if_error: false

  # deploy:
  #   name: Deploy
  #   runs-on: ubuntu-latest
  #   needs: test
  #   # Run only on pushing a tag
  #   if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #   - name: Setup Python 3.8
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: 3.8
  #   - name: Install dependencies
  #     run:
  #       python -m pip install -U pip wheel twine
  #   - name: Make dists
  #     run:
  #       python setup.py sdist bdist_wheel
  #   - name: PyPI upload
  #     env:
  #       TWINE_USERNAME: __token__
  #       TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
  #     run: |
  #       twine upload dist/*
